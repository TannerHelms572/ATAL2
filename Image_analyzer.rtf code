{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Italic;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww14440\viewh9320\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\i\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import cv2\
import numpy as np\
import os\
\
def process_image(image_path, output_path=None, brightness_threshold=200):\
    # Load image in grayscale for efficiency\
    gray = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)\
    if gray is None:\
        print(f"Failed to load: \{image_path\}")\
        return 0\
\
    # Threshold to isolate bright spots\
    _, thresh = cv2.threshold(gray, brightness_threshold, 255, cv2.THRESH_BINARY)\
\
    # Find contours (bright spots)\
    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\
\
    # Convert to color to draw rectangles\
    output_image = cv2.cvtColor(gray, cv2.COLOR_GRAY2BGR)\
\
    # Draw bounding boxes around bright spots\
    for cnt in contours:\
        x, y, w, h = cv2.boundingRect(cnt)\
        cv2.rectangle(output_image, (x, y), (x+w, y+h), (0, 255, 0), 1)\
\
    # Save output image if path is provided\
    if output_path:\
        cv2.imwrite(output_path, output_image)\
\
    return len(contours)\
\
def process_directory(input_dir, output_dir=None, brightness_threshold=200):\
    total_spots = 0\
    for filename in os.listdir(input_dir):\
        if filename.lower().endswith(('.png', '.jpg', '.jpeg', '.bmp')):\
            input_path = os.path.join(input_dir, filename)\
            output_path = os.path.join(output_dir, filename) if output_dir else None\
            num_spots = process_image(input_path, output_path, brightness_threshold)\
            print(f"\{filename\}: \{num_spots\} spots found")\
            total_spots += num_spots\
    print(f"\\nTotal spots in all images: \{total_spots\}")\
\
# Example usage\
if __name__ == "__main__":\
    input_folder = "images"          # Folder with input images\
    output_folder = "output_images"  # Folder to save output images\
\
    os.makedirs(output_folder, exist_ok=True)\
    process_directory(input_folder, output_folder)\
}
